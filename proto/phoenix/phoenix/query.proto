syntax = "proto3";

package phoenix.phoenix;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "phoenix/phoenix/params.proto";
import "phoenix/phoenix/virtual_block.proto";

option go_package = "github.com/govm-net/phoenix/x/phoenix/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/govm-net/phoenix/phoenix/params";
  
  }
  
  // Queries a list of VirtualBlock items.
  rpc VirtualBlock    (QueryGetVirtualBlockRequest) returns (QueryGetVirtualBlockResponse) {
    option (google.api.http).get = "/govm-net/phoenix/phoenix/virtual_block/{id}";
  
  }
  rpc VirtualBlockAll (QueryAllVirtualBlockRequest) returns (QueryAllVirtualBlockResponse) {
    option (google.api.http).get = "/govm-net/phoenix/phoenix/virtual_block";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetVirtualBlockRequest {
  uint64 id = 1;
}

message QueryGetVirtualBlockResponse {
  VirtualBlock VirtualBlock = 1 [(gogoproto.nullable) = false];
}

message QueryAllVirtualBlockRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllVirtualBlockResponse {
  repeated VirtualBlock                           VirtualBlock = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination   = 2;
}

